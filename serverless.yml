service: goodreads-amazon

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: eu-west-2
  stage: dev
  logRetentionInDays: 90
  versionFunctions: false
    # here we put the layers we want to use
  # layers:
  #   # Google Chrome for AWS Lambda as a layer
  #   # Make sure you use the latest version depending on the region
  #   # https://github.com/shelfio/chrome-aws-lambda-layer
  #   - arn:aws:lambda:eu-west-2:764866452798:layer:chrome-aws-lambda:31
  # function parameters
  memorySize: 2048 # recommended
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: arn:aws:s3:::${self:custom.s3Bucket}/*

custom:
  prefix: goodreads-amazon
  s3Bucket: goodreads-amazon-bucket

plugins:
  - serverless-plugin-typescript 
  - serverless-offline
  - serverless-dotenv-plugin

package:
  excludeDevDependencies: true

functions:
  nodejs:
    handler: ./src/lambdas/crawlToReadShelf.handler
    name: ${self:custom.prefix}-toread-shelf-cron-function
    description: Script used to search Amazon Kindle book deals for books marked as "Want to read" in Goodreads.
    environment:
      S3_REGION: ${self:provider.region}
      S3_BUCKET: ${self:custom.s3Bucket}

resources:
  Resources:
    # Bucket where the screenshots are stored
    screenshotsBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        BucketName: ${self:custom.s3Bucket}
        AccessControl: Private
    # Grant public read-only access to the bucket
    screenshotsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Principal: "*"
              Resource: arn:aws:s3:::${self:custom.s3Bucket}/*
        Bucket:
          Ref: screenshotsBucket

